// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BetSettingsColumns holds the columns for the "bet_settings" table.
	BetSettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "values", Type: field.TypeJSON},
		{Name: "created_time", Type: field.TypeTime},
	}
	// BetSettingsTable holds the schema information for the "bet_settings" table.
	BetSettingsTable = &schema.Table{
		Name:       "bet_settings",
		Columns:    BetSettingsColumns,
		PrimaryKey: []*schema.Column{BetSettingsColumns[0]},
	}
	// RecordsColumns holds the columns for the "records" table.
	RecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "numbers", Type: field.TypeJSON},
		{Name: "cash_amount", Type: field.TypeInt64},
		{Name: "bet_type", Type: field.TypeInt64, Default: 0},
		{Name: "prize", Type: field.TypeJSON},
		{Name: "cash_in", Type: field.TypeInt64},
		{Name: "cash_out", Type: field.TypeInt64},
		{Name: "created_time", Type: field.TypeTime},
		{Name: "win_info", Type: field.TypeJSON},
		{Name: "sheet_records", Type: field.TypeInt64, Nullable: true},
	}
	// RecordsTable holds the schema information for the "records" table.
	RecordsTable = &schema.Table{
		Name:       "records",
		Columns:    RecordsColumns,
		PrimaryKey: []*schema.Column{RecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "records_sheets_records",
				Columns:    []*schema.Column{RecordsColumns[9]},
				RefColumns: []*schema.Column{SheetsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ResultsColumns holds the columns for the "results" table.
	ResultsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "province", Type: field.TypeInt64, Default: 0},
		{Name: "created_time", Type: field.TypeTime},
		{Name: "prize_map", Type: field.TypeJSON},
	}
	// ResultsTable holds the schema information for the "results" table.
	ResultsTable = &schema.Table{
		Name:       "results",
		Columns:    ResultsColumns,
		PrimaryKey: []*schema.Column{ResultsColumns[0]},
	}
	// SheetsColumns holds the columns for the "sheets" table.
	SheetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "status", Type: field.TypeInt64, Default: 0},
		{Name: "name", Type: field.TypeString},
		{Name: "area", Type: field.TypeInt64, Default: 0},
		{Name: "province", Type: field.TypeInt64, Default: 0},
		{Name: "ratio", Type: field.TypeFloat64, Default: 0},
		{Name: "result_time", Type: field.TypeTime},
		{Name: "created_time", Type: field.TypeTime},
		{Name: "updated_time", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "bet_setting_sheets", Type: field.TypeInt64, Nullable: true},
	}
	// SheetsTable holds the schema information for the "sheets" table.
	SheetsTable = &schema.Table{
		Name:       "sheets",
		Columns:    SheetsColumns,
		PrimaryKey: []*schema.Column{SheetsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sheets_bet_settings_sheets",
				Columns:    []*schema.Column{SheetsColumns[10]},
				RefColumns: []*schema.Column{BetSettingsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BetSettingsTable,
		RecordsTable,
		ResultsTable,
		SheetsTable,
	}
)

func init() {
	RecordsTable.ForeignKeys[0].RefTable = SheetsTable
	SheetsTable.ForeignKeys[0].RefTable = BetSettingsTable
}
