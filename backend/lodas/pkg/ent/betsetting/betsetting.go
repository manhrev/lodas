// Code generated by ent, DO NOT EDIT.

package betsetting

const (
	// Label holds the string label denoting the betsetting type in the database.
	Label = "bet_setting"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldValues holds the string denoting the values field in the database.
	FieldValues = "values"
	// FieldCreatedTime holds the string denoting the created_time field in the database.
	FieldCreatedTime = "created_time"
	// EdgeSheets holds the string denoting the sheets edge name in mutations.
	EdgeSheets = "sheets"
	// Table holds the table name of the betsetting in the database.
	Table = "bet_settings"
	// SheetsTable is the table that holds the sheets relation/edge.
	SheetsTable = "sheets"
	// SheetsInverseTable is the table name for the Sheet entity.
	// It exists in this package in order to avoid circular dependency with the "sheet" package.
	SheetsInverseTable = "sheets"
	// SheetsColumn is the table column denoting the sheets relation/edge.
	SheetsColumn = "bet_setting_sheets"
)

// Columns holds all SQL columns for betsetting fields.
var Columns = []string{
	FieldID,
	FieldUserID,
	FieldValues,
	FieldCreatedTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
