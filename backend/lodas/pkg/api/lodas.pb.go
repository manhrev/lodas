// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: api/lodas.proto

package lodas

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Area int32

const (
	Area_AREA_UNSPECIFIED Area = 0
	Area_AREA_BAC         Area = 1
	Area_AREA_TRUNG       Area = 2
)

// Enum value maps for Area.
var (
	Area_name = map[int32]string{
		0: "AREA_UNSPECIFIED",
		1: "AREA_BAC",
		2: "AREA_TRUNG",
	}
	Area_value = map[string]int32{
		"AREA_UNSPECIFIED": 0,
		"AREA_BAC":         1,
		"AREA_TRUNG":       2,
	}
)

func (x Area) Enum() *Area {
	p := new(Area)
	*p = x
	return p
}

func (x Area) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Area) Descriptor() protoreflect.EnumDescriptor {
	return file_api_lodas_proto_enumTypes[0].Descriptor()
}

func (Area) Type() protoreflect.EnumType {
	return &file_api_lodas_proto_enumTypes[0]
}

func (x Area) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Area.Descriptor instead.
func (Area) EnumDescriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{0}
}

type Province int32

const (
	Province_UNSPECIFIED Province = 0
	Province_PHU_YEN     Province = 1
	Province_HUE         Province = 2
	Province_DAK_LAK     Province = 3
	Province_QUANG_NAM   Province = 4
	Province_DA_NANG     Province = 5
	Province_KHANH_HOA   Province = 6
	Province_BINH_DINH   Province = 7
	Province_QUANG_BINH  Province = 8
	Province_QUANG_TRI   Province = 9
	Province_GIA_LAI     Province = 10
	Province_NINH_THUAN  Province = 11
	//DA_NANG
	Province_DAK_NONG   Province = 12
	Province_QUANG_NGAI Province = 13
	//KHANH_HOA
	//HUE
	Province_KON_TUM  Province = 14
	Province_MIEN_BAC Province = 15
)

// Enum value maps for Province.
var (
	Province_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "PHU_YEN",
		2:  "HUE",
		3:  "DAK_LAK",
		4:  "QUANG_NAM",
		5:  "DA_NANG",
		6:  "KHANH_HOA",
		7:  "BINH_DINH",
		8:  "QUANG_BINH",
		9:  "QUANG_TRI",
		10: "GIA_LAI",
		11: "NINH_THUAN",
		12: "DAK_NONG",
		13: "QUANG_NGAI",
		14: "KON_TUM",
		15: "MIEN_BAC",
	}
	Province_value = map[string]int32{
		"UNSPECIFIED": 0,
		"PHU_YEN":     1,
		"HUE":         2,
		"DAK_LAK":     3,
		"QUANG_NAM":   4,
		"DA_NANG":     5,
		"KHANH_HOA":   6,
		"BINH_DINH":   7,
		"QUANG_BINH":  8,
		"QUANG_TRI":   9,
		"GIA_LAI":     10,
		"NINH_THUAN":  11,
		"DAK_NONG":    12,
		"QUANG_NGAI":  13,
		"KON_TUM":     14,
		"MIEN_BAC":    15,
	}
)

func (x Province) Enum() *Province {
	p := new(Province)
	*p = x
	return p
}

func (x Province) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Province) Descriptor() protoreflect.EnumDescriptor {
	return file_api_lodas_proto_enumTypes[1].Descriptor()
}

func (Province) Type() protoreflect.EnumType {
	return &file_api_lodas_proto_enumTypes[1]
}

func (x Province) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Province.Descriptor instead.
func (Province) EnumDescriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{1}
}

type SheetSortBy int32

const (
	SheetSortBy_SHEET_SORT_BY_UNSPECIFIED SheetSortBy = 0 //...
)

// Enum value maps for SheetSortBy.
var (
	SheetSortBy_name = map[int32]string{
		0: "SHEET_SORT_BY_UNSPECIFIED",
	}
	SheetSortBy_value = map[string]int32{
		"SHEET_SORT_BY_UNSPECIFIED": 0,
	}
)

func (x SheetSortBy) Enum() *SheetSortBy {
	p := new(SheetSortBy)
	*p = x
	return p
}

func (x SheetSortBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SheetSortBy) Descriptor() protoreflect.EnumDescriptor {
	return file_api_lodas_proto_enumTypes[2].Descriptor()
}

func (SheetSortBy) Type() protoreflect.EnumType {
	return &file_api_lodas_proto_enumTypes[2]
}

func (x SheetSortBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SheetSortBy.Descriptor instead.
func (SheetSortBy) EnumDescriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{2}
}

type SheetStatus int32

const (
	SheetStatus_SHEET_STATUS_UNSPECIFIED   SheetStatus = 0
	SheetStatus_SHEET_STATUS_NOT_SUBMITTED SheetStatus = 1
	SheetStatus_SHEET_STATUS_SUBMITTED     SheetStatus = 2
	SheetStatus_SHEET_STATUS_GOT_RESULT    SheetStatus = 3
)

// Enum value maps for SheetStatus.
var (
	SheetStatus_name = map[int32]string{
		0: "SHEET_STATUS_UNSPECIFIED",
		1: "SHEET_STATUS_NOT_SUBMITTED",
		2: "SHEET_STATUS_SUBMITTED",
		3: "SHEET_STATUS_GOT_RESULT",
	}
	SheetStatus_value = map[string]int32{
		"SHEET_STATUS_UNSPECIFIED":   0,
		"SHEET_STATUS_NOT_SUBMITTED": 1,
		"SHEET_STATUS_SUBMITTED":     2,
		"SHEET_STATUS_GOT_RESULT":    3,
	}
)

func (x SheetStatus) Enum() *SheetStatus {
	p := new(SheetStatus)
	*p = x
	return p
}

func (x SheetStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SheetStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_lodas_proto_enumTypes[3].Descriptor()
}

func (SheetStatus) Type() protoreflect.EnumType {
	return &file_api_lodas_proto_enumTypes[3]
}

func (x SheetStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SheetStatus.Descriptor instead.
func (SheetStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{3}
}

type RecordSortBy int32

const (
	RecordSortBy_RECORD_SORT_BY_UNSPECIFIED RecordSortBy = 0 //...
)

// Enum value maps for RecordSortBy.
var (
	RecordSortBy_name = map[int32]string{
		0: "RECORD_SORT_BY_UNSPECIFIED",
	}
	RecordSortBy_value = map[string]int32{
		"RECORD_SORT_BY_UNSPECIFIED": 0,
	}
)

func (x RecordSortBy) Enum() *RecordSortBy {
	p := new(RecordSortBy)
	*p = x
	return p
}

func (x RecordSortBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordSortBy) Descriptor() protoreflect.EnumDescriptor {
	return file_api_lodas_proto_enumTypes[4].Descriptor()
}

func (RecordSortBy) Type() protoreflect.EnumType {
	return &file_api_lodas_proto_enumTypes[4]
}

func (x RecordSortBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordSortBy.Descriptor instead.
func (RecordSortBy) EnumDescriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{4}
}

type Prize int32

const (
	Prize_PRIZE_UNSPECIFIED Prize = 0
	Prize_PRIZE_1DB         Prize = 1
	Prize_PRIZE_1G1         Prize = 2
	Prize_PRIZE_1G2         Prize = 3
	Prize_PRIZE_2G2         Prize = 4
	Prize_PRIZE_1G3         Prize = 5
	Prize_PRIZE_2G3         Prize = 6
	Prize_PRIZE_3G3         Prize = 7
	Prize_PRIZE_4G3         Prize = 8
	Prize_PRIZE_5G3         Prize = 9
	Prize_PRIZE_6G3         Prize = 10
	Prize_PRIZE_1G4         Prize = 11
	Prize_PRIZE_2G4         Prize = 12
	Prize_PRIZE_3G4         Prize = 13
	Prize_PRIZE_4G4         Prize = 14
	Prize_PRIZE_5G4         Prize = 15
	Prize_PRIZE_6G4         Prize = 16
	Prize_PRIZE_7G4         Prize = 17
	Prize_PRIZE_1G5         Prize = 18
	Prize_PRIZE_2G5         Prize = 19
	Prize_PRIZE_3G5         Prize = 20
	Prize_PRIZE_4G5         Prize = 21
	Prize_PRIZE_5G5         Prize = 22
	Prize_PRIZE_6G5         Prize = 23
	Prize_PRIZE_1G6         Prize = 24
	Prize_PRIZE_2G6         Prize = 25
	Prize_PRIZE_3G6         Prize = 26
	Prize_PRIZE_1G7         Prize = 27
	Prize_PRIZE_2G7         Prize = 28
	Prize_PRIZE_3G7         Prize = 29
	Prize_PRIZE_4G7         Prize = 30
	Prize_PRIZE_1G8         Prize = 31
)

// Enum value maps for Prize.
var (
	Prize_name = map[int32]string{
		0:  "PRIZE_UNSPECIFIED",
		1:  "PRIZE_1DB",
		2:  "PRIZE_1G1",
		3:  "PRIZE_1G2",
		4:  "PRIZE_2G2",
		5:  "PRIZE_1G3",
		6:  "PRIZE_2G3",
		7:  "PRIZE_3G3",
		8:  "PRIZE_4G3",
		9:  "PRIZE_5G3",
		10: "PRIZE_6G3",
		11: "PRIZE_1G4",
		12: "PRIZE_2G4",
		13: "PRIZE_3G4",
		14: "PRIZE_4G4",
		15: "PRIZE_5G4",
		16: "PRIZE_6G4",
		17: "PRIZE_7G4",
		18: "PRIZE_1G5",
		19: "PRIZE_2G5",
		20: "PRIZE_3G5",
		21: "PRIZE_4G5",
		22: "PRIZE_5G5",
		23: "PRIZE_6G5",
		24: "PRIZE_1G6",
		25: "PRIZE_2G6",
		26: "PRIZE_3G6",
		27: "PRIZE_1G7",
		28: "PRIZE_2G7",
		29: "PRIZE_3G7",
		30: "PRIZE_4G7",
		31: "PRIZE_1G8",
	}
	Prize_value = map[string]int32{
		"PRIZE_UNSPECIFIED": 0,
		"PRIZE_1DB":         1,
		"PRIZE_1G1":         2,
		"PRIZE_1G2":         3,
		"PRIZE_2G2":         4,
		"PRIZE_1G3":         5,
		"PRIZE_2G3":         6,
		"PRIZE_3G3":         7,
		"PRIZE_4G3":         8,
		"PRIZE_5G3":         9,
		"PRIZE_6G3":         10,
		"PRIZE_1G4":         11,
		"PRIZE_2G4":         12,
		"PRIZE_3G4":         13,
		"PRIZE_4G4":         14,
		"PRIZE_5G4":         15,
		"PRIZE_6G4":         16,
		"PRIZE_7G4":         17,
		"PRIZE_1G5":         18,
		"PRIZE_2G5":         19,
		"PRIZE_3G5":         20,
		"PRIZE_4G5":         21,
		"PRIZE_5G5":         22,
		"PRIZE_6G5":         23,
		"PRIZE_1G6":         24,
		"PRIZE_2G6":         25,
		"PRIZE_3G6":         26,
		"PRIZE_1G7":         27,
		"PRIZE_2G7":         28,
		"PRIZE_3G7":         29,
		"PRIZE_4G7":         30,
		"PRIZE_1G8":         31,
	}
)

func (x Prize) Enum() *Prize {
	p := new(Prize)
	*p = x
	return p
}

func (x Prize) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Prize) Descriptor() protoreflect.EnumDescriptor {
	return file_api_lodas_proto_enumTypes[5].Descriptor()
}

func (Prize) Type() protoreflect.EnumType {
	return &file_api_lodas_proto_enumTypes[5]
}

func (x Prize) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Prize.Descriptor instead.
func (Prize) EnumDescriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{5}
}

type BetType int32

const (
	BetType_BET_TYPE_UNSPECIFIED BetType = 0
	BetType_LO2                  BetType = 1
	BetType_LO3                  BetType = 2
	BetType_DE2                  BetType = 3
	BetType_DE3                  BetType = 4
	BetType_DA                   BetType = 5
)

// Enum value maps for BetType.
var (
	BetType_name = map[int32]string{
		0: "BET_TYPE_UNSPECIFIED",
		1: "LO2",
		2: "LO3",
		3: "DE2",
		4: "DE3",
		5: "DA",
	}
	BetType_value = map[string]int32{
		"BET_TYPE_UNSPECIFIED": 0,
		"LO2":                  1,
		"LO3":                  2,
		"DE2":                  3,
		"DE3":                  4,
		"DA":                   5,
	}
)

func (x BetType) Enum() *BetType {
	p := new(BetType)
	*p = x
	return p
}

func (x BetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BetType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_lodas_proto_enumTypes[6].Descriptor()
}

func (BetType) Type() protoreflect.EnumType {
	return &file_api_lodas_proto_enumTypes[6]
}

func (x BetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BetType.Descriptor instead.
func (BetType) EnumDescriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{6}
}

type CreateSheetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Area       Area                   `protobuf:"varint,2,opt,name=area,proto3,enum=lodas.Area" json:"area,omitempty"`
	Province   Province               `protobuf:"varint,3,opt,name=province,proto3,enum=lodas.Province" json:"province,omitempty"`
	Ratio      float64                `protobuf:"fixed64,4,opt,name=ratio,proto3" json:"ratio,omitempty"`
	ResultTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=result_time,json=resultTime,proto3" json:"result_time,omitempty"`
}

func (x *CreateSheetRequest) Reset() {
	*x = CreateSheetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSheetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSheetRequest) ProtoMessage() {}

func (x *CreateSheetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSheetRequest.ProtoReflect.Descriptor instead.
func (*CreateSheetRequest) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSheetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSheetRequest) GetArea() Area {
	if x != nil {
		return x.Area
	}
	return Area_AREA_UNSPECIFIED
}

func (x *CreateSheetRequest) GetProvince() Province {
	if x != nil {
		return x.Province
	}
	return Province_UNSPECIFIED
}

func (x *CreateSheetRequest) GetRatio() float64 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

func (x *CreateSheetRequest) GetResultTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ResultTime
	}
	return nil
}

type CreateSheetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateSheetReply) Reset() {
	*x = CreateSheetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSheetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSheetReply) ProtoMessage() {}

func (x *CreateSheetReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSheetReply.ProtoReflect.Descriptor instead.
func (*CreateSheetReply) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{1}
}

type DeleteSheetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteSheetRequest) Reset() {
	*x = DeleteSheetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSheetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSheetRequest) ProtoMessage() {}

func (x *DeleteSheetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSheetRequest.ProtoReflect.Descriptor instead.
func (*DeleteSheetRequest) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteSheetRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteSheetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSheetReply) Reset() {
	*x = DeleteSheetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSheetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSheetReply) ProtoMessage() {}

func (x *DeleteSheetReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSheetReply.ProtoReflect.Descriptor instead.
func (*DeleteSheetReply) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{3}
}

type UpdateSheetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SheetId    int64                  `protobuf:"varint,1,opt,name=sheet_id,json=sheetId,proto3" json:"sheet_id,omitempty"`
	Name       string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Area       Area                   `protobuf:"varint,3,opt,name=area,proto3,enum=lodas.Area" json:"area,omitempty"`
	Province   Province               `protobuf:"varint,4,opt,name=province,proto3,enum=lodas.Province" json:"province,omitempty"`
	Ratio      float64                `protobuf:"fixed64,5,opt,name=ratio,proto3" json:"ratio,omitempty"`
	ResultTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=result_time,json=resultTime,proto3" json:"result_time,omitempty"`
	Status     int64                  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateSheetRequest) Reset() {
	*x = UpdateSheetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSheetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSheetRequest) ProtoMessage() {}

func (x *UpdateSheetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSheetRequest.ProtoReflect.Descriptor instead.
func (*UpdateSheetRequest) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateSheetRequest) GetSheetId() int64 {
	if x != nil {
		return x.SheetId
	}
	return 0
}

func (x *UpdateSheetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSheetRequest) GetArea() Area {
	if x != nil {
		return x.Area
	}
	return Area_AREA_UNSPECIFIED
}

func (x *UpdateSheetRequest) GetProvince() Province {
	if x != nil {
		return x.Province
	}
	return Province_UNSPECIFIED
}

func (x *UpdateSheetRequest) GetRatio() float64 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

func (x *UpdateSheetRequest) GetResultTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ResultTime
	}
	return nil
}

func (x *UpdateSheetRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateSheetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSheetReply) Reset() {
	*x = UpdateSheetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSheetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSheetReply) ProtoMessage() {}

func (x *UpdateSheetReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSheetReply.ProtoReflect.Descriptor instead.
func (*UpdateSheetReply) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{5}
}

type SubmitSheetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SubmitSheetRequest) Reset() {
	*x = SubmitSheetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitSheetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitSheetRequest) ProtoMessage() {}

func (x *SubmitSheetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitSheetRequest.ProtoReflect.Descriptor instead.
func (*SubmitSheetRequest) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{6}
}

func (x *SubmitSheetRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SubmitSheetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubmitSheetReply) Reset() {
	*x = SubmitSheetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitSheetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitSheetReply) ProtoMessage() {}

func (x *SubmitSheetReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitSheetReply.ProtoReflect.Descriptor instead.
func (*SubmitSheetReply) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{7}
}

type ListSheetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit     uint32                 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset    uint64                 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Ascending bool                   `protobuf:"varint,3,opt,name=ascending,proto3" json:"ascending,omitempty"`
	SortBy    SheetSortBy            `protobuf:"varint,4,opt,name=sort_by,json=sortBy,proto3,enum=lodas.SheetSortBy" json:"sort_by,omitempty"`
	From      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	To        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListSheetsRequest) Reset() {
	*x = ListSheetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSheetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSheetsRequest) ProtoMessage() {}

func (x *ListSheetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSheetsRequest.ProtoReflect.Descriptor instead.
func (*ListSheetsRequest) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{8}
}

func (x *ListSheetsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListSheetsRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListSheetsRequest) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

func (x *ListSheetsRequest) GetSortBy() SheetSortBy {
	if x != nil {
		return x.SortBy
	}
	return SheetSortBy_SHEET_SORT_BY_UNSPECIFIED
}

func (x *ListSheetsRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListSheetsRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type ListSheetsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sheets []*SheetInfo `protobuf:"bytes,1,rep,name=sheets,proto3" json:"sheets,omitempty"`
	Total  int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListSheetsReply) Reset() {
	*x = ListSheetsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSheetsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSheetsReply) ProtoMessage() {}

func (x *ListSheetsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSheetsReply.ProtoReflect.Descriptor instead.
func (*ListSheetsReply) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{9}
}

func (x *ListSheetsReply) GetSheets() []*SheetInfo {
	if x != nil {
		return x.Sheets
	}
	return nil
}

func (x *ListSheetsReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SheetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status      SheetStatus            `protobuf:"varint,2,opt,name=status,proto3,enum=lodas.SheetStatus" json:"status,omitempty"`
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Area        Area                   `protobuf:"varint,4,opt,name=area,proto3,enum=lodas.Area" json:"area,omitempty"`
	Province    Province               `protobuf:"varint,5,opt,name=province,proto3,enum=lodas.Province" json:"province,omitempty"`
	Ratio       float64                `protobuf:"fixed64,6,opt,name=ratio,proto3" json:"ratio,omitempty"`
	ResultTime  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=result_time,json=resultTime,proto3" json:"result_time,omitempty"`
	CreatedTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	UpdatedTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
}

func (x *SheetInfo) Reset() {
	*x = SheetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SheetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SheetInfo) ProtoMessage() {}

func (x *SheetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SheetInfo.ProtoReflect.Descriptor instead.
func (*SheetInfo) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{10}
}

func (x *SheetInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SheetInfo) GetStatus() SheetStatus {
	if x != nil {
		return x.Status
	}
	return SheetStatus_SHEET_STATUS_UNSPECIFIED
}

func (x *SheetInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SheetInfo) GetArea() Area {
	if x != nil {
		return x.Area
	}
	return Area_AREA_UNSPECIFIED
}

func (x *SheetInfo) GetProvince() Province {
	if x != nil {
		return x.Province
	}
	return Province_UNSPECIFIED
}

func (x *SheetInfo) GetRatio() float64 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

func (x *SheetInfo) GetResultTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ResultTime
	}
	return nil
}

func (x *SheetInfo) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

func (x *SheetInfo) GetUpdatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedTime
	}
	return nil
}

type CreateRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SheetId int64    `protobuf:"varint,5,opt,name=sheet_id,json=sheetId,proto3" json:"sheet_id,omitempty"`
	Numbers []string `protobuf:"bytes,1,rep,name=numbers,proto3" json:"numbers,omitempty"`
	Cash    int64    `protobuf:"varint,2,opt,name=cash,proto3" json:"cash,omitempty"`
	Prizes  []Prize  `protobuf:"varint,3,rep,packed,name=prizes,proto3,enum=lodas.Prize" json:"prizes,omitempty"`
	BetType BetType  `protobuf:"varint,4,opt,name=bet_type,json=betType,proto3,enum=lodas.BetType" json:"bet_type,omitempty"`
}

func (x *CreateRecordRequest) Reset() {
	*x = CreateRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecordRequest) ProtoMessage() {}

func (x *CreateRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateRecordRequest) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{11}
}

func (x *CreateRecordRequest) GetSheetId() int64 {
	if x != nil {
		return x.SheetId
	}
	return 0
}

func (x *CreateRecordRequest) GetNumbers() []string {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *CreateRecordRequest) GetCash() int64 {
	if x != nil {
		return x.Cash
	}
	return 0
}

func (x *CreateRecordRequest) GetPrizes() []Prize {
	if x != nil {
		return x.Prizes
	}
	return nil
}

func (x *CreateRecordRequest) GetBetType() BetType {
	if x != nil {
		return x.BetType
	}
	return BetType_BET_TYPE_UNSPECIFIED
}

type CreateRecordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRecordReply) Reset() {
	*x = CreateRecordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRecordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecordReply) ProtoMessage() {}

func (x *CreateRecordReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecordReply.ProtoReflect.Descriptor instead.
func (*CreateRecordReply) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{12}
}

type ListRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SheetId   int64                  `protobuf:"varint,7,opt,name=sheet_id,json=sheetId,proto3" json:"sheet_id,omitempty"`
	Limit     uint32                 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset    uint64                 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Ascending bool                   `protobuf:"varint,3,opt,name=ascending,proto3" json:"ascending,omitempty"`
	SortBy    RecordSortBy           `protobuf:"varint,4,opt,name=sort_by,json=sortBy,proto3,enum=lodas.RecordSortBy" json:"sort_by,omitempty"`
	From      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	To        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListRecordsRequest) Reset() {
	*x = ListRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecordsRequest) ProtoMessage() {}

func (x *ListRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecordsRequest.ProtoReflect.Descriptor instead.
func (*ListRecordsRequest) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{13}
}

func (x *ListRecordsRequest) GetSheetId() int64 {
	if x != nil {
		return x.SheetId
	}
	return 0
}

func (x *ListRecordsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListRecordsRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListRecordsRequest) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

func (x *ListRecordsRequest) GetSortBy() RecordSortBy {
	if x != nil {
		return x.SortBy
	}
	return RecordSortBy_RECORD_SORT_BY_UNSPECIFIED
}

func (x *ListRecordsRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListRecordsRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type DeleteRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteRecordRequest) Reset() {
	*x = DeleteRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecordRequest) ProtoMessage() {}

func (x *DeleteRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecordRequest.ProtoReflect.Descriptor instead.
func (*DeleteRecordRequest) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteRecordRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteRecordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRecordReply) Reset() {
	*x = DeleteRecordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecordReply) ProtoMessage() {}

func (x *DeleteRecordReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecordReply.ProtoReflect.Descriptor instead.
func (*DeleteRecordReply) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{15}
}

type ListRecordsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*Record `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	Total   int64     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListRecordsReply) Reset() {
	*x = ListRecordsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRecordsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecordsReply) ProtoMessage() {}

func (x *ListRecordsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecordsReply.ProtoReflect.Descriptor instead.
func (*ListRecordsReply) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{16}
}

func (x *ListRecordsReply) GetRecords() []*Record {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *ListRecordsReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                  `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`
	SheetId    int64                  `protobuf:"varint,8,opt,name=sheet_id,json=sheetId,proto3" json:"sheet_id,omitempty"`
	Numbers    []string               `protobuf:"bytes,1,rep,name=numbers,proto3" json:"numbers,omitempty"`
	Cash       int64                  `protobuf:"varint,2,opt,name=cash,proto3" json:"cash,omitempty"`
	Prizes     []Prize                `protobuf:"varint,3,rep,packed,name=prizes,proto3,enum=lodas.Prize" json:"prizes,omitempty"`
	BetType    BetType                `protobuf:"varint,4,opt,name=bet_type,json=betType,proto3,enum=lodas.BetType" json:"bet_type,omitempty"`
	CashIn     int64                  `protobuf:"varint,5,opt,name=cash_in,json=cashIn,proto3" json:"cash_in,omitempty"`
	WinInfo    map[int64]string       `protobuf:"bytes,9,rep,name=win_info,json=winInfo,proto3" json:"win_info,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // prize -> number
	CashOut    int64                  `protobuf:"varint,6,opt,name=cash_out,json=cashOut,proto3" json:"cash_out,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *Record) Reset() {
	*x = Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{17}
}

func (x *Record) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Record) GetSheetId() int64 {
	if x != nil {
		return x.SheetId
	}
	return 0
}

func (x *Record) GetNumbers() []string {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *Record) GetCash() int64 {
	if x != nil {
		return x.Cash
	}
	return 0
}

func (x *Record) GetPrizes() []Prize {
	if x != nil {
		return x.Prizes
	}
	return nil
}

func (x *Record) GetBetType() BetType {
	if x != nil {
		return x.BetType
	}
	return BetType_BET_TYPE_UNSPECIFIED
}

func (x *Record) GetCashIn() int64 {
	if x != nil {
		return x.CashIn
	}
	return 0
}

func (x *Record) GetWinInfo() map[int64]string {
	if x != nil {
		return x.WinInfo
	}
	return nil
}

func (x *Record) GetCashOut() int64 {
	if x != nil {
		return x.CashOut
	}
	return 0
}

func (x *Record) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type CreateBetSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetSettingInfo *BetSettingInfo `protobuf:"bytes,1,opt,name=bet_setting_info,json=betSettingInfo,proto3" json:"bet_setting_info,omitempty"`
}

func (x *CreateBetSettingRequest) Reset() {
	*x = CreateBetSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBetSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBetSettingRequest) ProtoMessage() {}

func (x *CreateBetSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBetSettingRequest.ProtoReflect.Descriptor instead.
func (*CreateBetSettingRequest) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{18}
}

func (x *CreateBetSettingRequest) GetBetSettingInfo() *BetSettingInfo {
	if x != nil {
		return x.BetSettingInfo
	}
	return nil
}

type BetSettingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LO2 int64 `protobuf:"varint,1,opt,name=LO2,proto3" json:"LO2,omitempty"`
	LO3 int64 `protobuf:"varint,2,opt,name=LO3,proto3" json:"LO3,omitempty"`
	DE2 int64 `protobuf:"varint,3,opt,name=DE2,proto3" json:"DE2,omitempty"`
	DE3 int64 `protobuf:"varint,4,opt,name=DE3,proto3" json:"DE3,omitempty"`
	DA  int64 `protobuf:"varint,5,opt,name=DA,proto3" json:"DA,omitempty"`
}

func (x *BetSettingInfo) Reset() {
	*x = BetSettingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetSettingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetSettingInfo) ProtoMessage() {}

func (x *BetSettingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetSettingInfo.ProtoReflect.Descriptor instead.
func (*BetSettingInfo) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{19}
}

func (x *BetSettingInfo) GetLO2() int64 {
	if x != nil {
		return x.LO2
	}
	return 0
}

func (x *BetSettingInfo) GetLO3() int64 {
	if x != nil {
		return x.LO3
	}
	return 0
}

func (x *BetSettingInfo) GetDE2() int64 {
	if x != nil {
		return x.DE2
	}
	return 0
}

func (x *BetSettingInfo) GetDE3() int64 {
	if x != nil {
		return x.DE3
	}
	return 0
}

func (x *BetSettingInfo) GetDA() int64 {
	if x != nil {
		return x.DA
	}
	return 0
}

type CreateBetSettingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateBetSettingReply) Reset() {
	*x = CreateBetSettingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBetSettingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBetSettingReply) ProtoMessage() {}

func (x *CreateBetSettingReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBetSettingReply.ProtoReflect.Descriptor instead.
func (*CreateBetSettingReply) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{20}
}

type GetBetSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBetSettingRequest) Reset() {
	*x = GetBetSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBetSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBetSettingRequest) ProtoMessage() {}

func (x *GetBetSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBetSettingRequest.ProtoReflect.Descriptor instead.
func (*GetBetSettingRequest) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{21}
}

type GetBetSettingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetSettingInfo *BetSettingInfo        `protobuf:"bytes,1,opt,name=bet_setting_info,json=betSettingInfo,proto3" json:"bet_setting_info,omitempty"`
	CreatedTime    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
}

func (x *GetBetSettingReply) Reset() {
	*x = GetBetSettingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_lodas_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBetSettingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBetSettingReply) ProtoMessage() {}

func (x *GetBetSettingReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_lodas_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBetSettingReply.ProtoReflect.Descriptor instead.
func (*GetBetSettingReply) Descriptor() ([]byte, []int) {
	return file_api_lodas_proto_rawDescGZIP(), []int{22}
}

func (x *GetBetSettingReply) GetBetSettingInfo() *BetSettingInfo {
	if x != nil {
		return x.BetSettingInfo
	}
	return nil
}

func (x *GetBetSettingReply) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

var File_api_lodas_proto protoreflect.FileDescriptor

var file_api_lodas_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52,
	0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x65, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xfc, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x61,
	0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6c, 0x6f, 0x64, 0x61,
	0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x2b, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x12,
	0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68,
	0x65, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x53, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x12,
	0x0a, 0x10, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0xe8, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x65, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x53, 0x68,
	0x65, 0x65, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42,
	0x79, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x51, 0x0a,
	0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x65, 0x65, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x28, 0x0a, 0x06, 0x73, 0x68, 0x65, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x53, 0x68, 0x65, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x73, 0x68, 0x65, 0x65, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0xfa, 0x02, 0x0a, 0x09, 0x53, 0x68, 0x65, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x53, 0x68, 0x65, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6c,
	0x6f, 0x64, 0x61, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12,
	0x2b, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x3d, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d,
	0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xaf, 0x01,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x68, 0x65, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x61, 0x73, 0x68, 0x12, 0x24,
	0x0a, 0x06, 0x70, 0x72, 0x69, 0x7a, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x06, 0x70, 0x72,
	0x69, 0x7a, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x62, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x42,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x62, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x13, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x85, 0x02, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x68, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73,
	0x68, 0x65, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79,
	0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x51, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27,
	0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x96, 0x03,
	0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x65, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x68, 0x65, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x61, 0x73,
	0x68, 0x12, 0x24, 0x0a, 0x06, 0x70, 0x72, 0x69, 0x7a, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52,
	0x06, 0x70, 0x72, 0x69, 0x7a, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x62, 0x65, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6c, 0x6f, 0x64, 0x61,
	0x73, 0x2e, 0x42, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x62, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x69, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x61, 0x73, 0x68, 0x49, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x77,
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x57, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x12, 0x3b, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x3a, 0x0a, 0x0c, 0x57, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5a, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3f, 0x0a, 0x10, 0x62, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x6f,
	0x64, 0x61, 0x73, 0x2e, 0x42, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0e, 0x62, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x68, 0x0a, 0x0e, 0x42, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x4c, 0x4f, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x4c, 0x4f, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x4c, 0x4f, 0x33, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x4c, 0x4f, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x45, 0x32, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x44, 0x45, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x45,
	0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x44, 0x45, 0x33, 0x12, 0x0e, 0x0a, 0x02,
	0x44, 0x41, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x44, 0x41, 0x22, 0x17, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x65, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x94, 0x01,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x10, 0x62, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x42, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x62, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x2a, 0x3a, 0x0a, 0x04, 0x41, 0x72, 0x65, 0x61, 0x12, 0x14, 0x0a, 0x10,
	0x41, 0x52, 0x45, 0x41, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x52, 0x45, 0x41, 0x5f, 0x42, 0x41, 0x43, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x52, 0x45, 0x41, 0x5f, 0x54, 0x52, 0x55, 0x4e, 0x47, 0x10, 0x02,
	0x2a, 0xed, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x48, 0x55, 0x5f, 0x59, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x48,
	0x55, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x41, 0x4b, 0x5f, 0x4c, 0x41, 0x4b, 0x10,
	0x03, 0x12, 0x0d, 0x0a, 0x09, 0x51, 0x55, 0x41, 0x4e, 0x47, 0x5f, 0x4e, 0x41, 0x4d, 0x10, 0x04,
	0x12, 0x0b, 0x0a, 0x07, 0x44, 0x41, 0x5f, 0x4e, 0x41, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x0d, 0x0a,
	0x09, 0x4b, 0x48, 0x41, 0x4e, 0x48, 0x5f, 0x48, 0x4f, 0x41, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x49, 0x4e, 0x48, 0x5f, 0x44, 0x49, 0x4e, 0x48, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x51,
	0x55, 0x41, 0x4e, 0x47, 0x5f, 0x42, 0x49, 0x4e, 0x48, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x51,
	0x55, 0x41, 0x4e, 0x47, 0x5f, 0x54, 0x52, 0x49, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x49,
	0x41, 0x5f, 0x4c, 0x41, 0x49, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x49, 0x4e, 0x48, 0x5f,
	0x54, 0x48, 0x55, 0x41, 0x4e, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x41, 0x4b, 0x5f, 0x4e,
	0x4f, 0x4e, 0x47, 0x10, 0x0c, 0x12, 0x0e, 0x0a, 0x0a, 0x51, 0x55, 0x41, 0x4e, 0x47, 0x5f, 0x4e,
	0x47, 0x41, 0x49, 0x10, 0x0d, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x4f, 0x4e, 0x5f, 0x54, 0x55, 0x4d,
	0x10, 0x0e, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x49, 0x45, 0x4e, 0x5f, 0x42, 0x41, 0x43, 0x10, 0x0f,
	0x2a, 0x2c, 0x0a, 0x0b, 0x53, 0x68, 0x65, 0x65, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12,
	0x1d, 0x0a, 0x19, 0x53, 0x48, 0x45, 0x45, 0x54, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x2a, 0x84,
	0x01, 0x0a, 0x0b, 0x53, 0x68, 0x65, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x18, 0x53, 0x48, 0x45, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a,
	0x53, 0x48, 0x45, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16,
	0x53, 0x48, 0x45, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x42,
	0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x48, 0x45, 0x45,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x47, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x53,
	0x55, 0x4c, 0x54, 0x10, 0x03, 0x2a, 0x2e, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53,
	0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f,
	0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x2a, 0xef, 0x03, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x12,
	0x15, 0x0a, 0x11, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f,
	0x31, 0x44, 0x42, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x31,
	0x47, 0x31, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x31, 0x47,
	0x32, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x32, 0x47, 0x32,
	0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x31, 0x47, 0x33, 0x10,
	0x05, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x32, 0x47, 0x33, 0x10, 0x06,
	0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x33, 0x47, 0x33, 0x10, 0x07, 0x12,
	0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x34, 0x47, 0x33, 0x10, 0x08, 0x12, 0x0d,
	0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x35, 0x47, 0x33, 0x10, 0x09, 0x12, 0x0d, 0x0a,
	0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x36, 0x47, 0x33, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09,
	0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x31, 0x47, 0x34, 0x10, 0x0b, 0x12, 0x0d, 0x0a, 0x09, 0x50,
	0x52, 0x49, 0x5a, 0x45, 0x5f, 0x32, 0x47, 0x34, 0x10, 0x0c, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52,
	0x49, 0x5a, 0x45, 0x5f, 0x33, 0x47, 0x34, 0x10, 0x0d, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49,
	0x5a, 0x45, 0x5f, 0x34, 0x47, 0x34, 0x10, 0x0e, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a,
	0x45, 0x5f, 0x35, 0x47, 0x34, 0x10, 0x0f, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45,
	0x5f, 0x36, 0x47, 0x34, 0x10, 0x10, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f,
	0x37, 0x47, 0x34, 0x10, 0x11, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x31,
	0x47, 0x35, 0x10, 0x12, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x32, 0x47,
	0x35, 0x10, 0x13, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x33, 0x47, 0x35,
	0x10, 0x14, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x34, 0x47, 0x35, 0x10,
	0x15, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x35, 0x47, 0x35, 0x10, 0x16,
	0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x36, 0x47, 0x35, 0x10, 0x17, 0x12,
	0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x31, 0x47, 0x36, 0x10, 0x18, 0x12, 0x0d,
	0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x32, 0x47, 0x36, 0x10, 0x19, 0x12, 0x0d, 0x0a,
	0x09, 0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x33, 0x47, 0x36, 0x10, 0x1a, 0x12, 0x0d, 0x0a, 0x09,
	0x50, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x31, 0x47, 0x37, 0x10, 0x1b, 0x12, 0x0d, 0x0a, 0x09, 0x50,
	0x52, 0x49, 0x5a, 0x45, 0x5f, 0x32, 0x47, 0x37, 0x10, 0x1c, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52,
	0x49, 0x5a, 0x45, 0x5f, 0x33, 0x47, 0x37, 0x10, 0x1d, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49,
	0x5a, 0x45, 0x5f, 0x34, 0x47, 0x37, 0x10, 0x1e, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x49, 0x5a,
	0x45, 0x5f, 0x31, 0x47, 0x38, 0x10, 0x1f, 0x2a, 0x4f, 0x0a, 0x07, 0x42, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x4c, 0x4f, 0x32, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x33, 0x10, 0x02, 0x12, 0x07,
	0x0a, 0x03, 0x44, 0x45, 0x32, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x45, 0x33, 0x10, 0x04,
	0x12, 0x06, 0x0a, 0x02, 0x44, 0x41, 0x10, 0x05, 0x32, 0xbd, 0x05, 0x0a, 0x05, 0x4c, 0x6f, 0x64,
	0x61, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x65, 0x65,
	0x74, 0x12, 0x19, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6c,
	0x6f, 0x64, 0x61, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x65, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x68, 0x65, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68,
	0x65, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x68, 0x65, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x0a, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x68, 0x65, 0x65, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x6c, 0x6f, 0x64, 0x61,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x65, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x68, 0x65, 0x65, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x0b, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x68, 0x65, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x6c, 0x6f, 0x64,
	0x61, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x53, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x19, 0x2e,
	0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x44, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x1a, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x44, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x50, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x1e, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x47, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x1b, 0x2e, 0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x65, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x6c, 0x6f, 0x64, 0x61, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x68, 0x72, 0x65, 0x76, 0x2f, 0x6c,
	0x6f, 0x64, 0x61, 0x73, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x6c, 0x6f, 0x64,
	0x61, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x6c, 0x6f, 0x64, 0x61, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_lodas_proto_rawDescOnce sync.Once
	file_api_lodas_proto_rawDescData = file_api_lodas_proto_rawDesc
)

func file_api_lodas_proto_rawDescGZIP() []byte {
	file_api_lodas_proto_rawDescOnce.Do(func() {
		file_api_lodas_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_lodas_proto_rawDescData)
	})
	return file_api_lodas_proto_rawDescData
}

var file_api_lodas_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_api_lodas_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_api_lodas_proto_goTypes = []interface{}{
	(Area)(0),                       // 0: lodas.Area
	(Province)(0),                   // 1: lodas.Province
	(SheetSortBy)(0),                // 2: lodas.SheetSortBy
	(SheetStatus)(0),                // 3: lodas.SheetStatus
	(RecordSortBy)(0),               // 4: lodas.RecordSortBy
	(Prize)(0),                      // 5: lodas.Prize
	(BetType)(0),                    // 6: lodas.BetType
	(*CreateSheetRequest)(nil),      // 7: lodas.CreateSheetRequest
	(*CreateSheetReply)(nil),        // 8: lodas.CreateSheetReply
	(*DeleteSheetRequest)(nil),      // 9: lodas.DeleteSheetRequest
	(*DeleteSheetReply)(nil),        // 10: lodas.DeleteSheetReply
	(*UpdateSheetRequest)(nil),      // 11: lodas.UpdateSheetRequest
	(*UpdateSheetReply)(nil),        // 12: lodas.UpdateSheetReply
	(*SubmitSheetRequest)(nil),      // 13: lodas.SubmitSheetRequest
	(*SubmitSheetReply)(nil),        // 14: lodas.SubmitSheetReply
	(*ListSheetsRequest)(nil),       // 15: lodas.ListSheetsRequest
	(*ListSheetsReply)(nil),         // 16: lodas.ListSheetsReply
	(*SheetInfo)(nil),               // 17: lodas.SheetInfo
	(*CreateRecordRequest)(nil),     // 18: lodas.CreateRecordRequest
	(*CreateRecordReply)(nil),       // 19: lodas.CreateRecordReply
	(*ListRecordsRequest)(nil),      // 20: lodas.ListRecordsRequest
	(*DeleteRecordRequest)(nil),     // 21: lodas.DeleteRecordRequest
	(*DeleteRecordReply)(nil),       // 22: lodas.DeleteRecordReply
	(*ListRecordsReply)(nil),        // 23: lodas.ListRecordsReply
	(*Record)(nil),                  // 24: lodas.Record
	(*CreateBetSettingRequest)(nil), // 25: lodas.CreateBetSettingRequest
	(*BetSettingInfo)(nil),          // 26: lodas.BetSettingInfo
	(*CreateBetSettingReply)(nil),   // 27: lodas.CreateBetSettingReply
	(*GetBetSettingRequest)(nil),    // 28: lodas.GetBetSettingRequest
	(*GetBetSettingReply)(nil),      // 29: lodas.GetBetSettingReply
	nil,                             // 30: lodas.Record.WinInfoEntry
	(*timestamppb.Timestamp)(nil),   // 31: google.protobuf.Timestamp
}
var file_api_lodas_proto_depIdxs = []int32{
	0,  // 0: lodas.CreateSheetRequest.area:type_name -> lodas.Area
	1,  // 1: lodas.CreateSheetRequest.province:type_name -> lodas.Province
	31, // 2: lodas.CreateSheetRequest.result_time:type_name -> google.protobuf.Timestamp
	0,  // 3: lodas.UpdateSheetRequest.area:type_name -> lodas.Area
	1,  // 4: lodas.UpdateSheetRequest.province:type_name -> lodas.Province
	31, // 5: lodas.UpdateSheetRequest.result_time:type_name -> google.protobuf.Timestamp
	2,  // 6: lodas.ListSheetsRequest.sort_by:type_name -> lodas.SheetSortBy
	31, // 7: lodas.ListSheetsRequest.from:type_name -> google.protobuf.Timestamp
	31, // 8: lodas.ListSheetsRequest.to:type_name -> google.protobuf.Timestamp
	17, // 9: lodas.ListSheetsReply.sheets:type_name -> lodas.SheetInfo
	3,  // 10: lodas.SheetInfo.status:type_name -> lodas.SheetStatus
	0,  // 11: lodas.SheetInfo.area:type_name -> lodas.Area
	1,  // 12: lodas.SheetInfo.province:type_name -> lodas.Province
	31, // 13: lodas.SheetInfo.result_time:type_name -> google.protobuf.Timestamp
	31, // 14: lodas.SheetInfo.created_time:type_name -> google.protobuf.Timestamp
	31, // 15: lodas.SheetInfo.updated_time:type_name -> google.protobuf.Timestamp
	5,  // 16: lodas.CreateRecordRequest.prizes:type_name -> lodas.Prize
	6,  // 17: lodas.CreateRecordRequest.bet_type:type_name -> lodas.BetType
	4,  // 18: lodas.ListRecordsRequest.sort_by:type_name -> lodas.RecordSortBy
	31, // 19: lodas.ListRecordsRequest.from:type_name -> google.protobuf.Timestamp
	31, // 20: lodas.ListRecordsRequest.to:type_name -> google.protobuf.Timestamp
	24, // 21: lodas.ListRecordsReply.records:type_name -> lodas.Record
	5,  // 22: lodas.Record.prizes:type_name -> lodas.Prize
	6,  // 23: lodas.Record.bet_type:type_name -> lodas.BetType
	30, // 24: lodas.Record.win_info:type_name -> lodas.Record.WinInfoEntry
	31, // 25: lodas.Record.create_time:type_name -> google.protobuf.Timestamp
	26, // 26: lodas.CreateBetSettingRequest.bet_setting_info:type_name -> lodas.BetSettingInfo
	26, // 27: lodas.GetBetSettingReply.bet_setting_info:type_name -> lodas.BetSettingInfo
	31, // 28: lodas.GetBetSettingReply.created_time:type_name -> google.protobuf.Timestamp
	7,  // 29: lodas.Lodas.CreateSheet:input_type -> lodas.CreateSheetRequest
	9,  // 30: lodas.Lodas.DeleteSheet:input_type -> lodas.DeleteSheetRequest
	11, // 31: lodas.Lodas.UpdateSheet:input_type -> lodas.UpdateSheetRequest
	15, // 32: lodas.Lodas.ListSheets:input_type -> lodas.ListSheetsRequest
	13, // 33: lodas.Lodas.SubmitSheet:input_type -> lodas.SubmitSheetRequest
	20, // 34: lodas.Lodas.ListRecords:input_type -> lodas.ListRecordsRequest
	18, // 35: lodas.Lodas.CreateRecord:input_type -> lodas.CreateRecordRequest
	21, // 36: lodas.Lodas.DeleteRecord:input_type -> lodas.DeleteRecordRequest
	25, // 37: lodas.Lodas.CreateBetSetting:input_type -> lodas.CreateBetSettingRequest
	28, // 38: lodas.Lodas.GetBetSetting:input_type -> lodas.GetBetSettingRequest
	8,  // 39: lodas.Lodas.CreateSheet:output_type -> lodas.CreateSheetReply
	10, // 40: lodas.Lodas.DeleteSheet:output_type -> lodas.DeleteSheetReply
	12, // 41: lodas.Lodas.UpdateSheet:output_type -> lodas.UpdateSheetReply
	16, // 42: lodas.Lodas.ListSheets:output_type -> lodas.ListSheetsReply
	14, // 43: lodas.Lodas.SubmitSheet:output_type -> lodas.SubmitSheetReply
	23, // 44: lodas.Lodas.ListRecords:output_type -> lodas.ListRecordsReply
	19, // 45: lodas.Lodas.CreateRecord:output_type -> lodas.CreateRecordReply
	22, // 46: lodas.Lodas.DeleteRecord:output_type -> lodas.DeleteRecordReply
	27, // 47: lodas.Lodas.CreateBetSetting:output_type -> lodas.CreateBetSettingReply
	29, // 48: lodas.Lodas.GetBetSetting:output_type -> lodas.GetBetSettingReply
	39, // [39:49] is the sub-list for method output_type
	29, // [29:39] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_api_lodas_proto_init() }
func file_api_lodas_proto_init() {
	if File_api_lodas_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_lodas_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSheetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSheetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSheetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSheetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSheetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSheetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitSheetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitSheetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSheetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSheetsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SheetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRecordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRecordsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBetSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetSettingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBetSettingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBetSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_lodas_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBetSettingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_lodas_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_lodas_proto_goTypes,
		DependencyIndexes: file_api_lodas_proto_depIdxs,
		EnumInfos:         file_api_lodas_proto_enumTypes,
		MessageInfos:      file_api_lodas_proto_msgTypes,
	}.Build()
	File_api_lodas_proto = out.File
	file_api_lodas_proto_rawDesc = nil
	file_api_lodas_proto_goTypes = nil
	file_api_lodas_proto_depIdxs = nil
}
